version: 2
jobs:
  checkout:
    working_directory: ~/project
    docker:
    - image: circleci/node:latest

    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: Install dependencies
        command: npm install
    - save_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
        paths:
        - node_modules

  production_build:
    working_directory: ~/project
    docker:
      - image: circleci/node:latest

    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: build
        command: npm run build
    - save_cache:
        key: build-cache-{{ .Revision }}
        paths:
          - build

  staging_build:
    working_directory: ~/project
    docker:
    - image: circleci/node:latest

    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: build
        command: |
          rm -f .env.production
          npm run build
    - save_cache:
        key: build-cache-{{ .Revision }}
        paths:
          - build

  production_deploy:
    working_directory: ~/project
    docker:
      - image: disruptivedev/flexge-cli:latest
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - deploy:
        name: deploy to AWS
        command: FLEXGE_CLI_USER=${FLEXGE_USER} FLEXGE_CLI_PASSWORD=${FLEXGE_PASSWORD} flexge-cli cloudfront-deploy admin production

  staging_deploy:
    working_directory: ~/project
    docker:
      - image: disruptivedev/flexge-cli:latest
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - deploy:
        name: deploy to AWS
        command: FLEXGE_CLI_USER=${FLEXGE_USER} FLEXGE_CLI_PASSWORD=${FLEXGE_PASSWORD} flexge-cli cloudfront-deploy admin staging

workflows:
  version: 2

  build:
    jobs:
    - checkout:
        filters:
          branches:
            only:
              - master
    - production_build:
        requires:
          - checkout
        filters:
          branches:
            only:
              - master
    - production_deploy:
        requires:
          - production_build
        filters:
          branches:
            only:
              - master

  staging_build:
    jobs:
    - checkout:
        filters:
          branches:
            only:
              - staging
    - staging_build:
        requires:
          - checkout
        filters:
          branches:
            only:
              - staging
    - staging_deploy:
        requires:
          - staging_build
        filters:
          branches:
            only:
              - staging