version: 2.1

executors:
  flexge-cli-executor:
    docker:
      - image: disruptivedev/flexge-cli:latest
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD

jobs:
  checkout:
    working_directory: ~/project
    docker:
    - image: circleci/node:latest

    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: Install dependencies
        command: npm ci
    - save_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
        paths:
        - node_modules

  production_build:
    working_directory: ~/project
    docker:
      - image: circleci/node:latest

    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: build
        command: |
          REACT_APP_ENVIRONMENT=production
          REACT_APP_API_URL=${PROD_ADMIN_API_URL}
          REACT_APP_WS_URL=${PROD_WS_URL}
          REACT_APP_STUDENT_API_URL=${PROD_STUDENT_API_URL}
          REACT_APP_FILES_URL=${PROD_ASSETS_URL}
          REACT_APP_BLOCK_FOR_PROD=true
          REACT_APP_GA_ID=UA-114140453-2
          npm run build
    - save_cache:
        key: build-cache-{{ .Revision }}
        paths:
          - build

  staging_build:
    working_directory: ~/project
    docker:
    - image: circleci/node:latest

    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: build
          command: |
            REACT_APP_ENVIRONMENT=staging
            REACT_APP_API_URL=${STAGING_ADMIN_API_URL}
            REACT_APP_WS_URL=${STAGING_WS_URL}
            REACT_APP_STUDENT_API_URL=${STAGING_STUDENT_API_URL}
            REACT_APP_FILES_URL=${STAGING_ASSETS_URL}
            npm run build
      - save_cache:
          key: build-cache-{{ .Revision }}
          paths:
            - build

  production_deploy:
    working_directory: ~/project
    executor: flexge-cli-executor
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ .Revision }}
      - deploy:
          name: deploy to AWS
          command: flexge-cli cloudfront-deploy admin production

  staging_deploy:
    working_directory: ~/project
    executor: flexge-cli-executor
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ .Revision }}
      - deploy:
          name: deploy to AWS
          command: flexge-cli cloudfront-deploy admin staging

workflows:
  version: 2

  build:
    jobs:
    - checkout:
        context:
          - default-envs
        filters:
          branches:
            only:
              - master
    - production_build:
        context:
          - default-envs
        requires:
          - checkout
        filters:
          branches:
            only:
              - master
    - production_deploy:
        context:
          - default-envs
        requires:
          - production_build
        filters:
          branches:
            only:
              - master

  staging_build:
    jobs:
    - checkout:
        context:
          - default-envs
        filters:
          branches:
            only:
              - staging
    - staging_build:
        context:
          - default-envs
        requires:
          - checkout
        filters:
          branches:
            only:
              - staging
    - staging_deploy:
        context:
          - default-envs
        requires:
          - staging_build
        filters:
          branches:
            only:
              - staging